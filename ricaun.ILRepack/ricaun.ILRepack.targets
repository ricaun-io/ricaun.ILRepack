<Project>

  <PropertyGroup>
    <ILRepackEnabled Condition="'$(ILRepackEnabled)' == ''">true</ILRepackEnabled>
    <ILRepackDeleteEnabled Condition="'$(ILRepackDeleteEnabled)' == ''">true</ILRepackDeleteEnabled>
    <ILRepackImportance Condition="'$(ILRepackImportance)' == ''">High</ILRepackImportance>
    <ILRepackRenameEnabled Condition="'$(ILRepackRenameEnabled)' == ''">false</ILRepackRenameEnabled>
  </PropertyGroup>

  <Target Name="ILRepackTarget" BeforeTargets="CopyFilesToOutputDirectory" Condition="$(ILRepackEnabled)">

    <ItemGroup>
      <ILRepackPackageVersion Include="@(PackageVersion)" Condition="'%(PackageVersion.Identity)' == 'ILRepack'"/>
    </ItemGroup>

    <ItemGroup Condition="'@(ILRepackPackageVersion->Count())' == '0'">
      <ILRepackPackageVersion Include="@(PackageReference)" Condition="'%(PackageReference.Identity)' == 'ILRepack'"/>
    </ItemGroup>

    <PropertyGroup>
      <ILRepackVersion Condition="'@(ILRepackPackageVersion->Count())' != '0'">%(ILRepackPackageVersion.Version)</ILRepackVersion>
      <ILRepackVersion Condition="'$(ILRepackVersion)' == ''">2.0.39</ILRepackVersion>
      <ILRepack Condition="'$(ILRepack)' == ''">$(NuGetPackageRoot)ilrepack\$(ILRepackVersion)\tools\ILRepack.exe</ILRepack>
    </PropertyGroup>

    <PropertyGroup>
      <ILRepackFileName>$(TargetName)$(TargetExt)</ILRepackFileName>
      <ILRepackProgramAssembly>@(IntermediateAssembly->'%(FullPath)')</ILRepackProgramAssembly>
      <ILRepackOutputFile>$(ILRepackProgramAssembly)</ILRepackOutputFile>
      <ILRepackOutputFileName>$(ILRepackFileName)</ILRepackOutputFileName>
      <ILRepackOutputRenameFile>$(ILRepackOutputFile)</ILRepackOutputRenameFile>
    </PropertyGroup>

    <PropertyGroup Condition="$(ILRepackRenameEnabled)">
      <ILRepackProgramFolder>@(IntermediateAssembly->'%(RelativeDir)')</ILRepackProgramFolder>
      <ILRepackOutputFileRevision>$([MSBuild]::Divide($([System.DateTime]::Now.TimeOfDay.TotalSeconds), 4).ToString('F0'))</ILRepackOutputFileRevision>
      <ILRepackOutputFileName>$(TargetName).$(ILRepackOutputFileRevision)$(TargetExt)</ILRepackOutputFileName>
      <ILRepackOutputRenameFile>$(ILRepackProgramFolder)$(ILRepackOutputFileName)</ILRepackOutputRenameFile>
    </PropertyGroup>

    <ItemGroup>
      <ILRepackPossibleAssemblyReferences Include="$(OutputPath)*.dll" />
      <ILRepackPossibleAssemblyReferences Include="$(OutputPath)*.exe" />
      <ILRepackImpossibleAssemblyReferences
        Include="$(OutputPath)*.*"
        Exclude="@(ILRepackPossibleAssemblyReferences)" />
      <ILRepackIncludedAssemblyReferences
        Include="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')"
        Exclude="@(ILRepackImpossibleAssemblyReferences)" />
      <ILRepackExcludedAssemblyReferences
        Include="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')"
        Exclude="@(ILRepackIncludedAssemblyReferences)" />
      <ILRepackExcludedEmbeddedAssemblies Include="$(ILRepackProgramAssembly)" />
      <ILRepackExcludedEmbeddedAssemblies Include="@(ILRepackIgnoreReferences->'$(OutputPath)%(identity)*')" />
      <ILRepackIncludedEmbeddedAssemblies
        Include="@(ILRepackIncludedAssemblyReferences)"
        Exclude="@(ILRepackExcludedEmbeddedAssemblies)" />

      <!-- Remove All Assemblies References -->
      <ILRepackIncludedEmbeddedAssemblies Remove="@(ILRepackIncludedEmbeddedAssemblies)" Condition="$(ILRepackRenameEnabled)" />

      <ILRepackInputAssemblies Include="$(ILRepackProgramAssembly)" />
      <ILRepackInputAssemblies Include="@(ILRepackIncludedEmbeddedAssemblies)" />
    </ItemGroup>

    <!--
    <Message Text="ILRepackIgnoreReferences: [@(ILRepackIgnoreReferences -> '%(identity)', ', ')]" Importance="$(ILRepackImportance)" />
    <Message Text="ILRepackExcludedEmbeddedAssemblies: [@(ILRepackExcludedEmbeddedAssemblies -> '%(Filename)%(Extension)', ', ')]" Importance="$(ILRepackImportance)" />
    -->

    <ItemGroup>
      <BuildReferencePath Include="@(ReferencePath)"/>
      <BuildReferenceFolder Include="@(BuildReferencePath -> '%(RelativeDir)')"/>
      <BuildReferenceFolderDistinct Include="@(BuildReferenceFolder -> Distinct())"/>
      <BuildReferenceFolderDistinctSlash Include="@(BuildReferenceFolderDistinct -> '%(identity)')"/>
    </ItemGroup>

    <PropertyGroup>
      <ILRepackCommandExtra Condition="'$(ILRepackCommandExtra)' == ''"></ILRepackCommandExtra>
      <ILRepackCommandImportance Condition="'$(ILRepackCommandImportance)' == ''">Low</ILRepackCommandImportance>
      <ILRepackCommandOutput>/out:&quot;$(ILRepackOutputRenameFile)&quot;</ILRepackCommandOutput>
      <ILRepackCommandInputAssemblies>@(ILRepackInputAssemblies -> '&quot;%(identity)&quot;', ' ')</ILRepackCommandInputAssemblies>
      <!-- Space in the end is used to mitigate slash with quot error.-->
      <ILRepackCommandLibFolder>@(BuildReferenceFolderDistinctSlash -> '/lib:&quot;%(identity) &quot;', ' ')</ILRepackCommandLibFolder>
    </PropertyGroup>

    <Message Text="ILRepack: $(ILRepackOutputFileName) -> [@(ILRepackInputAssemblies -> '%(Filename)%(Extension)', ', ')] ($(TargetFramework)) [$(ILRepackVersion)]" Importance="$(ILRepackImportance)" />

    <PropertyGroup>
      <ILRepackFullCommand>&quot;$(ILRepack)&quot; $(ILRepackCommandExtra) $(ILRepackCommandLibFolder) $(ILRepackCommandOutput) $(ILRepackCommandInputAssemblies)</ILRepackFullCommand>
    </PropertyGroup>

    <!--<Message Text="ILRepack Exec: '$(ILRepackFullCommand)'" Importance="$(ILRepackImportance)" />-->
    <Error Condition="!Exists('$(ILRepack)')" Text="Unable to locate '$(ILRepack)'" />

    <Exec Command="$(ILRepackFullCommand)"
          WorkingDirectory="$(MSBuildProjectDirectory)"
          ConsoleToMSBuild="true"
          StandardOutputImportance="$(ILRepackCommandImportance)"/>

    <Move SourceFiles="$(ILRepackOutputRenameFile)" DestinationFiles="$(ILRepackOutputFile)" Condition="$(ILRepackRenameEnabled)"/>

  </Target>

  <Target Name="ILRepackDeleteTarget" AfterTargets="ILRepackTarget" Condition="$(ILRepackEnabled) and $(ILRepackDeleteEnabled)">

    <ItemGroup>
      <ILRepackDeleteFiles Include="@(ILRepackIncludedEmbeddedAssemblies -> '%(RootDir)%(Directory)%(Filename).dll')"/>
      <ILRepackDeleteFiles Include="@(ILRepackIncludedEmbeddedAssemblies -> '%(RootDir)%(Directory)%(Filename).pdb')"/>
      <ILRepackDeleteFiles Include="@(ILRepackIncludedEmbeddedAssemblies -> '%(RootDir)%(Directory)%(Filename).xml')"/>
    </ItemGroup>

    <Message Text="ILRepack: $(ILRepackOutputFileName) -> Delete: [@(ILRepackIncludedEmbeddedAssemblies -> '%(Filename)%(Extension)', ', ')] ($(TargetFramework)) [$(ILRepackVersion)]" Importance="$(ILRepackImportance)" Condition="'@(ILRepackIncludedEmbeddedAssemblies->Count())' != '0'" />

    <Delete Files="@(ILRepackDeleteFiles)" />
    <ItemGroup>
      <Directories Include="$([System.IO.Directory]::GetDirectories('$(OutDir)%(DestinationSubDirectory)', '*', System.IO.SearchOption.AllDirectories))"/>
      <Directories>
        <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
      </Directories>
    </ItemGroup>
    <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'"/>
  </Target>

</Project>